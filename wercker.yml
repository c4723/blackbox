box: golang

build:
  steps:
    - wercker/setup-go-workspace
    - script:
        name: go test
        code: |
          go version
          go env
          go test -v -race
    - script:
        name: go build
        code: |
          GOOS=linux go build -o blackbox-linux
          GOOS=darwin go build -o blackbox-darwin
          GOOS=windows go build -o blackbox.exe
    - script:
        name: write version to file
        code: |
          go get github.com/xchapter7x/versioning
          export WERCKER_GITHUB_CREATE_RELEASE_ID=`versioning bump_patch`
          export SHORT_HASH=`git rev-parse --short $WERCKER_GIT_COMMIT`
          echo $WERCKER_GITHUB_CREATE_RELEASE_ID > blackbox-version
          echo $SHORT_HASH > blackbox-commit
    - script:
        name: copy artifacts
        code: |
          cp -R ./blackbox* ${WERCKER_OUTPUT_DIR}

deploy:
  steps:
    - script:
        name: set release id variable for version
        code: |
          export RELEASE_VERSION=`cat blackbox-version`
          export COMMIT_HASH=`cat blackbox-commit`

    - github-create-release:
        token: $GITHUB_TOKEN
        tag: $RELEASE_VERSION
        title: blackbox $RELEASE_VERSION - $COMMIT_HASH
        draft: true

    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: blackbox-darwin
        release_id: $WERCKER_GITHUB_CREATE_RELEASE_ID
        content-type: application/x-gzip

    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: blackbox-linux
        release_id: $WERCKER_GITHUB_CREATE_RELEASE_ID
        content-type: application/x-gzip

    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: blackbox.exe
        release_id: $WERCKER_GITHUB_CREATE_RELEASE_ID
        content-type: application/x-gzip
